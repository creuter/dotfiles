# use a for prefix
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# act like vim
setw -g mode-keys vi
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

set -g prefix2 C-s

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set -g status-right ''

# increase scrollback lines
set -g history-limit 10000

# prefix -> back-one-character
bind-key C-b send-prefix
# prefix-2 -> forward-incremental-history-search
bind-key C-s send-prefix -2

# don't suspend-client
unbind-key C-z

# smart pane switching with awareness of Vim splits.
# see: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# enable Truecolor
set -g default-terminal 'tmux-256color'
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

# default statusbar colors
set -g status-bg '#4b5263'
set -g status-fg '#abb2bf'
set-option -g status-attr default

# set-option -g status-fg white
# set-option -g status-bg default
# set-option -g status-attr default
# set-window-option -g window-status-fg "#666666"
# set-window-option -g window-status-bg default
# set-window-option -g window-status-attr default
# set-window-option -g window-status-current-fg red
# set-window-option -g window-status-current-bg default
# set-window-option -g window-status-current-attr default
# set-option -g message-fg white
# set-option -g message-bg black
# set-option -g message-attr bright
# set -g status-left " "
# set -g status-justify left
# setw -g window-status-format         ' #(echo "#{pane_current_command}") '
# setw -g window-status-current-format ' #(echo "#{pane_current_command}") '
# set -g status-right " "
